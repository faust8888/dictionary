spring.data.rest.base-path=/api
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# ===============================
# = DATA SOURCE
# ===============================


# Database
db.url: jdbc:mysql://localhost:3306/Dictionary
db.username: root
db.password: Meril%85441
db.driver: com.mysql.jdbc.Driver

# Hibernate
hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
hibernate.show_sql: true
hibernate.hbm2ddl.auto: none
entitymanager.packagesToScan: com.faust8888.project.dictionaryView.db.items

# Set here configurations for the database connection
spring.datasource.url = jdbc:mysql://localhost:3306/Dictionary1

# Username and password
spring.datasource.username = root
spring.datasource.password = Meril%85441

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect